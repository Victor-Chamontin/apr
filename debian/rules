#!/usr/bin/make -f

# Turn on VERBOSE output
#export DH_VERBOSE=1

#enable dpatch
include /usr/share/dpatch/dpatch.make

# These are used for cross-compiling and for saving the configure script
# # from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

BUILDDIR := build-$(DEB_HOST_GNU_TYPE)

CFLAGS := $(CFLAGS) -pipe -Wall -g

# hardening options
H_CFLAGS := -Wformat-security -D_FORTIFY_SOURCE=2
H_LDFLAGS := -Wl,-z,relro
# do not enable -fstack-protector on arm and armel, see #477772, #469517
ifeq (,$(findstring arm,$(DEB_HOST_GNU_TYPE)))
	H_CFLAGS += -fstack-protector
endif

CONFFLAGS += ac_cv_prog_AWK=mawk apr_cv_sctp=no

# Enable debug builds
ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
CFLAGS += -O0
else
CFLAGS += -O2
endif

# avoid having to recreate configure at build time by setting
# -D_REENTRANT manually on kfreebsd
ifneq (,$(findstring bsd,$(DEB_HOST_GNU_TYPE)))
	CPPFLAGS += -D_REENTRANT
endif

ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

ifeq (,$(findstring notest,$(DEB_BUILD_OPTIONS)))
	TEST_TARGET = test
else
	TEST_TARGET =
endif

SHELL=/bin/bash

$(BUILDDIR)/config.status: configure
	dh_testdir
	mkdir -p $(BUILDDIR)/docs
	cd $(BUILDDIR) && CFLAGS="$(CFLAGS)" CPPFLAGS="$(CPPFLAGS)" LDFLAGS="$(LDFLAGS)" $(CONFFLAGS) ../configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --enable-layout=Debian --includedir=\$${prefix}/usr/include/apr-1.0 --with-installbuilddir=\$${prefix}/usr/share/apr-1.0/build  --enable-nonportable-atomics
	# Determine whether upstream's configure gives the same definition of apr_ino_t as we had until 1.2.11-1
	rm -f debian/ino_t_test
	gcc -I$(CURDIR)/include -I$(BUILDDIR)/include `$(BUILDDIR)/apr-1-config --cppflags` -o debian/ino_t_test debian/ino_t_test.c
	debian/ino_t_test
	rm -f debian/ino_t_test

build: patch-stamp build-stamp

build-stamp: $(BUILDDIR)/config.status
	dh_testdir

	$(MAKE) -C $(BUILDDIR) CFLAGS="$(H_CFLAGS)" LDFLAGS="$(H_LDFLAGS)"
	$(MAKE) -C $(BUILDDIR) dox

	touch $@

clean: unpatch
	dh_testdir
	dh_testroot
	rm -f build-stamp test-stamp debian/ino_t_test
	rm -rf $(BUILDDIR)

	dh_clean

test: test-stamp

test-stamp: build
	dh_testdir
	$(MAKE) -C $(BUILDDIR) check CFLAGS="$(H_CFLAGS)" LDFLAGS="$(H_LDFLAGS)"
	touch $@

install: build $(TEST_TARGET)
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs -a

	$(MAKE) -C $(BUILDDIR) install DESTDIR=$(CURDIR)/debian/tmp

binary-indep: build install

binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs CHANGES
	dh_installdocs
	dh_install -a
	dh_installman -plibapr1-dev debian/apr-1-config.1
	dh_link
	dh_strip --dbg-package=libapr1-dbg
	dh_compress
	dh_fixperms
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
